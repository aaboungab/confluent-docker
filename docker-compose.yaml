version: '3.8'

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.2.4
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - kafka-net

  kafka1:
    image: confluentinc/cp-kafka:7.2.4
    hostname: kafka1
    container_name: kafka1
    volumes:
      - ./jmx_prometheus_javaagent.jar:/usr/share/java/jmx_prometheus_javaagent.jar
      - ./kafka_broker.yml:/opt/prometheus/kafka_broker.yml
      - ./unset-javaagent.sh:/usr/sbin/unset-javaagent.sh
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_OPTS: -javaagent:/usr/share/java/jmx_prometheus_javaagent.jar=9999:/opt/prometheus/kafka_broker.yml
    #command: ["java", "-javaagent:/usr/share/java/jmx_prometheus_javaagent.jar=9999:/opt/prometheus/kafka_broker.yml", "-jar", "/usr/share/java/jmx_prometheus_javaagent.jar"]
    #command: ["/bin/sh","-c", "echo $KAFKA_OPTS;unset $KAFKA_OPTS"]
      #KAFKA_JMX_PORT: 9999
      #KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
        #KAFKA_DEFAULT_REPLICATION_FACTOR: 1
        #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:29092
        #KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
        #KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - kafka-net

  kafka2:
    image: confluentinc/cp-kafka:7.2.4
    hostname: kafka2
    container_name: kafka2
    volumes:
      - ./jmx_prometheus_javaagent.jar:/usr/share/java/jmx_prometheus_javaagent.jar
      - ./kafka_broker.yml:/opt/prometheus/kafka_broker.yml
      - ./unset-javaagent.sh:/usr/sbin/unset-javaagent.sh
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_OPTS: -javaagent:/usr/share/java/jmx_prometheus_javaagent.jar=9998:/opt/prometheus/kafka_broker.yml
    #command: ["sh", "-c", "bin/kafka-server-start /etc/kafka/server.properties ; /path/to/unset-javaagent.sh"]
    #command: ["sh", "-c", "java -javaagent:/usr/share/java/jmx_prometheus_javaagent.jar=9998:/opt/prometheus/kafka_broker.yml -cp /opt/kafka/libs/*:/opt/kafka/config org.apache.kafka.server.KafkaServer /opt/kafka/config/server.properties"]
    #command: ["/bin/sh","-c", "echo $KAFKA_OPTS;unset $KAFKA_OPTS"]
      #KAFKA_JMX_PORT: 9998
      #KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
        #KAFKA_DEFAULT_REPLICATION_FACTOR: 1
        #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:29092
        #KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
        #KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - kafka-net

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.2.4
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka1:19092,PLAINTEXT://kafka2:19093'
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo1
      - kafka1
      - kafka2
    networks:
      - kafka-net

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.2.4
    container_name: control-center
    depends_on:
      - zoo1
      - kafka1
      - kafka2
    ports:
      - '9021:9021'
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka1:29092,kafka2:29093
      CONTROL_CENTER_ZOOKEEPER_CONNECT: "zoo1:2181"
      CONFLUENT_METRICS_TOPIC_REPLICATION: 2
      CONTROL_CENTER_REPLICATION_FACTOR: 2
    networks:
      - kafka-net

  prometheus:
    image: prom/prometheus:v2.28.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - kafka1
      - kafka2
    networks:
      - kafka-net
  
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - kafka1
      - kafka2
      - zoo1
    networks:
      - kafka-net
    

networks:
  kafka-net:
    name : kafka-net
    driver: bridge